name: Version

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - version-pipeline

jobs:
  check-version:
    name: Check Version Update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            orfino/*
            setup.py
      - name: Show diff
        run: |
          echo '${{ env.GIT_DIFF }}'
          echo '${{ env.GIT_DIFF_FILTERED }}'
          echo '${{ MATCHED_FILES.GIT_DIFF }}'
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Get version of main
        id: version-main
        run: |
          version_main=$(grep version setup.py)
          echo "::set-output name=VERSION_MAIN::${version_main}"
      - name: Checkout head branch
        uses: actions/checkout@v2
      - name: Get version head
        id: version-head
        run: |
          version_head=$(grep version setup.py)
          echo "::set-output name=VERSION_HEAD::${version_head}"
      - name: Compare versions
        id: new-version
        run: |
          new_version=false
          if [ "${{ steps.version-main.outputs.VERSION_MAIN }}" != "${{ steps.version-head.outputs.VERSION_HEAD }}" ]; then new_version=true; fi
          echo "New version in setup.py: $new_version"
          echo "::set-output name=NEW_VERSION::${new_version}"
      - name: Determine relevant changes
        id: relevant-changes
        run: |
          diff_files=$(git diff main..HEAD --name-only | grep -E 'setup.py|orfino/')
          echo Relevant changes in following files: $diff_files
          relevant_changes=true
          if [ -z "$diff_files" ]; then relevant_changes=false; fi
          echo "Relevant changes in code: $relevant_changes"
          echo "::set-output name=RELEVANT_CHANGES::${relevant_changes}"